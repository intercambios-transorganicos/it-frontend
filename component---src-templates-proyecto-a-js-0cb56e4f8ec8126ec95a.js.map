{"version":3,"file":"component---src-templates-proyecto-a-js-0cb56e4f8ec8126ec95a.js","mappings":"iLAwDA,IAlDuB,SAACA,GACpB,OAAmBC,EAAAA,EAAAA,WAAS,GAAxBC,EAAJ,KAAUC,EAAV,KACIC,EAAQF,EAAM,kBAAoB,QAYtC,OACI,uBAAMG,MAAO,CAACC,OAAO,SAErB,uBAAKC,UAAWH,GACZ,uBAAKG,UAAU,qBACf,uBAAKA,UAAU,iBACX,uBAAKA,UAAU,uBACf,sBAAIA,UAAU,SAASP,EAAMQ,QAC7B,yBAAIR,EAAMS,QACV,yBAAIT,EAAMU,SACV,yBAAIV,EAAMW,WAGd,0BAAQC,QAlBhB,WACIT,GAAQ,IAiB0BI,UAAU,uBAAuB,aAAW,WAG9E,uBAAMK,QA1BV,WAEIT,GAAQ,IAwBoBI,UAAU,QAAQF,MAAO,CAACQ,gBAAiBb,EAAMc,QAASC,MAAOf,EAAMgB,UAC/F,uBAAKT,UAAU,uBACf,gBAAC,IAAD,CAAiBA,UAAU,aAAaU,KAAMC,EAAAA,IAAmBC,KAAK,QAEtE,sBAAIZ,UAAU,SAAUP,EAAMoB,QAC/B,uBAAKb,UAAU,mBAEV,uBAAKA,UAAU,UACX,yBAAIP,EAAMqB,OAEd,uBAAKd,UAAU,UACX,yBAAIP,EAAMsB,a,mGCd9B,EAxBuB,SAAC,GAAgB,IAChCC,EAD+B,EAAdC,SAGrB,OACI,uBAAKjB,UAAU,2BACX,gBAACkB,EAAA,EAAD,KAEQF,EAAYG,KAAI,SAACC,EAAGC,GAChB,IAAIC,GAAaC,EAAAA,EAAAA,GAASH,EAAEI,WAE5B,OACI,gBAACN,EAAA,OAAD,CAAelB,UAAU,sBACrB,gBAAC,EAAAyB,EAAD,CAAaC,MAAOJ,EAAYK,IAAKN,EAAGO,IAAKP,W,oBCuC7E,EAlDkB,SAAC,GAAY,IAE3B,EAF0B,EAAVQ,KAEiDC,gBAA3DC,EAAN,EAAMA,GAAIC,EAAV,EAAUA,OAAQnB,EAAlB,EAAkBA,OAAQoB,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,UAAWjB,EAAhD,EAAgDA,SAEhD,OADAkB,QAAQC,IAAIL,EAAIC,EAAQnB,EAAQoB,EAAWC,GAEvC,gBAAC,IAAD,KACI,uBAAKlC,UAAU,qBACV,uBAAKA,UAAU,mBACZ,gBAAC,EAAD,CAAgBiB,SAAUA,IACxB,uBAAKjB,UAAU,iBACX,0BAAKgC,GACL,0BAAKnB,KAIb,uBAAKb,UAAU,mBACb,gBAAC,IAAD,CAAca,OAAQoB,EAAWnB,KAAMoB,EAAWnB,MAAOmB,EAAW3B,QAAQ,UAAUE,QAAS,UAAWR,OAAQ+B,EAAQ9B,OAAQgC","sources":["webpack://intercambios-transorganicos/./src/components/infoExpandedx2.js","webpack://intercambios-transorganicos/./src/components/mediaProyectos.js","webpack://intercambios-transorganicos/./src/templates/proyectoA.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport \"./infoExpanded.scss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExpandArrowsAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst InfoExpandedx2 = (props) => {\r\n    var[open, setOpen]=useState(false);\r\n    var clase = open? \"modal is-active\" : \"modal\";\r\n  \r\n    function handleclick(){\r\n        //props.funpass();\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleClose(){\r\n        setOpen(false);\r\n    }\r\n    \r\n  \r\n    return (\r\n        <div  style={{height:\"100%\"}}>\r\n            \r\n        <div className={clase}>\r\n            <div className=\"modal-background\"></div>\r\n            <div className=\"modal-content\">\r\n                <div className=\"infoExpandedContent\">\r\n                <h1 className=\"title\">{props.modalT}</h1>\r\n                <p>{props.modalP}</p>\r\n                <p>{props.modalP2}</p>\r\n                <p>{props.modalP3}</p>\r\n                </div>\r\n            </div>\r\n            <button onClick={handleClose} className=\"modal-close is-large\" aria-label=\"close\"></button>\r\n        </div>\r\n        \r\n        <div  onClick={handleclick} className=\"info_\" style={{backgroundColor: props.bgColor, color: props.txColor}}>\r\n            <div className=\"expandIconContainer\">\r\n            <FontAwesomeIcon className=\"expandIcon\" icon={faExpandArrowsAlt} size=\"2x\"  />\r\n            </div>\r\n            <h1 className=\"title\" >{props.titulo}</h1>\r\n           <div className=\"content columns\">\r\n                \r\n                <div className=\"column\">\r\n                    <p>{props.desc}</p>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <p>{props.desc2}</p>\r\n                </div>\r\n           </div>\r\n        </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoExpandedx2;\r\n","import React from 'react';\r\n\r\nimport {Carousel} from \"react-bootstrap\"\r\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\"\r\nimport \"./mediaProyectos.scss\"\r\n\r\n\r\n//const MyLoadable3 = loadable(() => import(\"tiny-slider-react\"));\r\n\r\nconst Mediaproyectos = ({imagenes}) => {\r\n    var localImages = imagenes;\r\n   \r\n    return (\r\n        <div className=\"proyectoSliderContainer\">\r\n            <Carousel >\r\n                {\r\n                    localImages.map((e, i) =>{\r\n                        var currentImg = getImage(e.localFile);\r\n                        //console.log(e.localFile);\r\n                        return(\r\n                            <Carousel.Item className=\"mediaProyectoSlide\">\r\n                                <GatsbyImage image={currentImg} key={i} alt={i} />\r\n                            </Carousel.Item>\r\n                        )\r\n                        \r\n                    })\r\n                }\r\n            </Carousel> \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mediaproyectos;\r\n","import React from 'react';\r\nimport {graphql} from \"gatsby\"\r\nimport MediaProyectos from \"../components/mediaProyectos\"\r\n//import loadable from \"@loadable/component\"\r\nimport Layout from \"../components/layout\"\r\nimport InfoExpanded from \"../components/infoExpandedx2\"\r\nimport \"./proyectoA.scss\"\r\n\r\n//const MyLoadable3 = loadable(() => import(\"../components/mediaProyectos\"));\r\n\r\nconst Proyectoa = ({data}) => {\r\n\r\n    const{id, nombre, titulo, subtitulo, contenido, imagenes} = data.strapiProyectos;\r\n    console.log(id, nombre, titulo, subtitulo, contenido);\r\n    return (\r\n        <Layout>\r\n            <div className=\"proyectoContainer\">\r\n                 <div className=\"proyectoPortada\">\r\n                    <MediaProyectos imagenes={imagenes} />\r\n                      <div className=\"portadaTitulo\">\r\n                          <h1>{nombre}</h1>\r\n                          <h2>{titulo}</h2>\r\n                      </div>\r\n                 </div>\r\n\r\n                  <div className=\"proyectoContent\">\r\n                    <InfoExpanded titulo={subtitulo} desc={contenido} desc2={contenido} bgColor=\"#eeeeee\" txColor={\"#242424\"} modalT={nombre} modalP={contenido} />\r\n                 \r\n                  </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport const query = graphql`\r\nquery Proyecto($proyectoId: String){\r\n    strapiProyectos(id: {eq: $proyectoId}) {\r\n      id\r\n      nombre\r\n      titulo\r\n      subtitulo\r\n      contenido\r\n      imagenes {\r\n        localFile {\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              placeholder: DOMINANT_COLOR\r\n              layout: CONSTRAINED\r\n                  width: 1800\r\n                  height: 800\r\n              )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n`\r\n\r\n\r\nexport default Proyectoa;\r\n"],"names":["props","useState","open","setOpen","clase","style","height","className","modalT","modalP","modalP2","modalP3","onClick","backgroundColor","bgColor","color","txColor","icon","faExpandArrowsAlt","size","titulo","desc","desc2","localImages","imagenes","Carousel","map","e","i","currentImg","getImage","localFile","G","image","key","alt","data","strapiProyectos","id","nombre","subtitulo","contenido","console","log"],"sourceRoot":""}